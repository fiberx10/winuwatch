// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Watches {
  id                String       @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  owner_ref         String?
  condition         String
  years             Int
  movement          String
  case_size         Int
  dail              String
  case_material     String
  bracelet_material String
  water_proof       String?
  box               Boolean
  papers            Boolean
  imageURL          String[] // ID Backedn URL/public/[id].jpg
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
  Competition       Competition?
  Order             Order?       @relation(fields: [orderId], references: [id])

  orderId String? @db.ObjectId

  @@map("watches")
}

model Competition {
  id                String            @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  start_date        DateTime
  remaining_tickets Int
  drawing_date      DateTime
  end_date          DateTime
  total_tickets     Int
  ticket_price      Float
  location          String
  second_reward     String
  price             Float
  status            CompetitionStatus
  winner            String?
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  watchesId         String            @unique @db.ObjectId
  Watches           Watches           @relation(fields: [watchesId], references: [id])

  @@map("competition")
}

enum OrderStatus {
  PENDING
  CONFIRMED
  CANCELLED
}

enum PaymentMethod {
  PAYPAL
  STRIPE
}

model Order {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  first_name    String
  last_name     String
  country       String
  address       String
  town          String
  zip           String
  phone         String
  email         String
  date          DateTime
  paymentMethod PaymentMethod
  checkedEmail  Boolean
  checkedSMS    Boolean
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  totalPrice   Float
  Watches       Watches[]

  @@map("order")
}

enum CompetitionStatus {
  ACTIVE
  NOT_ACTIVE
  COMPLETED
}
